name: Deploy to Amazon ECR

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: employeeapp
  AWS_REGION: ap-south-1
  ECR_REGISTRY: public.ecr.aws/m7y5i5k9/employeeapp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWSACCESSKEYID }}
          aws-secret-access-key: ${{ secrets.AWSSECRETACCESSKEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # Step 3.1: print pwd
      - name: workdir
        run: pwd
      # Step 4: Build, tag, and push Docker image to Amazon ECR
      - name: Build and Push Docker Image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: | 
          cd client
          echo "Building Docker image..."
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG 

          echo "Tagging Docker image..."
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "Pushing Docker image..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          cd
          cd server
          echo "Building Docker image..."
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG 

          echo "Tagging Docker image..."
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "Pushing Docker image..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
